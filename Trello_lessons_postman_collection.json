{
	"info": {
		"_postman_id": "31d0d3b1-6efd-468e-a37c-5cae8a29bd72",
		"name": "Trello lessons",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.environment.set(\"BoardID\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Board should be created\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"boardName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Board should be private\", function () {\r",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");\r",
							"});\r",
							"\r",
							"console.log(jsonData);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//pm.environment.set(\"boardName\", \"Postman Test Board\");\r",
							"\r",
							"pm.environment.set(\"boardName\", getRandomBoardName());\r",
							"\r",
							"function getRandomBoardName() {\r",
							"    const boardName= \"Postman Test Board \" + parseInt(Math.random() * 10000);\r",
							"    console.log(boardName);\r",
							"    return boardName;\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/?name={{boardName}}&key={{key}}&token={{token}}&defaultLists=false",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						},
						{
							"key": null,
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TODO on Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.environment.set(\"todoListId\", jsonData.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"List should be named TODO\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"TODO\");",
							"});",
							"",
							"pm.test(\"List should not be closed\", function () {",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"List has the right ID\", function () {",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"todoListId\"));",
							"});",
							"",
							"pm.test(\"Board has the right ID\", function () {",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"BoardID\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/lists?name=TODO&idBoard={{BoardID}}&key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{BoardID}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE on Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.environment.set(\"doneListId\", jsonData.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"List should be named DONE\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"DONE\");",
							"});",
							"",
							"pm.test(\"List should not be closed\", function () {",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"List has the right ID\", function () {",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"doneListId\"));",
							"});",
							"",
							"pm.test(\"Board has the right ID\", function () {",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"BoardID\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/lists?name=DONE&idBoard={{BoardID}}&key={{key}}&token={{token}}&pos=bottom",
					"host": [
						"{{url}}"
					],
					"path": [
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{BoardID}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "pos",
							"value": "bottom"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a card in TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.environment.set(\"cardId\", jsonData.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"List should be named 'Learn Postman'\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");",
							"});",
							"",
							"pm.test(\"TODO List has the right ID\", function () {",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"todoListId\"));",
							"});",
							"",
							"pm.test(\"Board has the right ID\", function () {",
							"    //var jsonData = pm.response.json();",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"BoardID\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/cards?name=Learn Postman&idList={{todoListId}}&key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"cards"
					],
					"query": [
						{
							"key": "name",
							"value": "Learn Postman"
						},
						{
							"key": "idList",
							"value": "{{todoListId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card to DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.environment.set(\"cardId\", jsonData.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"List should be named 'Learn Postman'\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");",
							"});",
							"",
							"pm.test(\"Should be moved to DONE List which has the right ID\", function () {",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"doneListId\"));",
							"});",
							"",
							"pm.test(\"Board has the right ID\", function () {",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"BoardID\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/cards/:id?idList={{doneListId}}&key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"cards",
						":id"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{doneListId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Board has the right name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"boardName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Board has the right ID\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"BoardID\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/:id?key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{BoardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"null\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/:id?key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{BoardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Check board delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"// Clear enviroment variables\r",
							"pm.environment.unset(\"boardName\");\r",
							"pm.environment.unset(\"BoardID\");\r",
							"pm.environment.unset(\"todoListId\");\r",
							"pm.environment.unset(\"doneListId\");\r",
							"pm.environment.unset(\"cardId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/:id?key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{BoardID}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "key",
			"value": "5ab8f4539a333380ce3bd3db547642ce"
		},
		{
			"key": "token",
			"value": "6e927611ff01068ee4e743a8bedf494a31e57d3578a1254672d9b0c0bdc5ab36"
		},
		{
			"key": "url",
			"value": "https://api.trello.com/1"
		}
	]
}